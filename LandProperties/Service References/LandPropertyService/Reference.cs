//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LandProperties.LandPropertyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LandProperty", Namespace="http://schemas.datacontract.org/2004/07/LandProperties.Entities")]
    [System.SerializableAttribute()]
    public partial class LandProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<LandProperties.LandPropertyService.Mortgage> MortgagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LandProperties.LandPropertyService.Owner OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Area {
            get {
                return this.AreaField;
            }
            set {
                if ((this.AreaField.Equals(value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<LandProperties.LandPropertyService.Mortgage> Mortgages {
            get {
                return this.MortgagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MortgagesField, value) != true)) {
                    this.MortgagesField = value;
                    this.RaisePropertyChanged("Mortgages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LandProperties.LandPropertyService.Owner Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPI {
            get {
                return this.UPIField;
            }
            set {
                if ((object.ReferenceEquals(this.UPIField, value) != true)) {
                    this.UPIField = value;
                    this.RaisePropertyChanged("UPI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Owner", Namespace="http://schemas.datacontract.org/2004/07/LandProperties.Entities")]
    [System.SerializableAttribute()]
    public partial class Owner : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<LandProperties.LandPropertyService.LandProperty> LandPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<LandProperties.LandPropertyService.LandProperty> LandProperties {
            get {
                return this.LandPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.LandPropertiesField, value) != true)) {
                    this.LandPropertiesField = value;
                    this.RaisePropertyChanged("LandProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mortgage", Namespace="http://schemas.datacontract.org/2004/07/LandProperties.Entities")]
    [System.SerializableAttribute()]
    public partial class Mortgage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BeginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MoneyAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginDate {
            get {
                return this.BeginDateField;
            }
            set {
                if ((this.BeginDateField.Equals(value) != true)) {
                    this.BeginDateField = value;
                    this.RaisePropertyChanged("BeginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MoneyAmount {
            get {
                return this.MoneyAmountField;
            }
            set {
                if ((this.MoneyAmountField.Equals(value) != true)) {
                    this.MoneyAmountField = value;
                    this.RaisePropertyChanged("MoneyAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LandPropertyService.ILandPropertyService")]
    public interface ILandPropertyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandPropertyService/GetAllLandProperties", ReplyAction="http://tempuri.org/ILandPropertyService/GetAllLandPropertiesResponse")]
        System.Collections.Generic.List<LandProperties.LandPropertyService.LandProperty> GetAllLandProperties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandPropertyService/GetAllLandProperties", ReplyAction="http://tempuri.org/ILandPropertyService/GetAllLandPropertiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<LandProperties.LandPropertyService.LandProperty>> GetAllLandPropertiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandPropertyService/GetLandProperty", ReplyAction="http://tempuri.org/ILandPropertyService/GetLandPropertyResponse")]
        LandProperties.LandPropertyService.LandProperty GetLandProperty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandPropertyService/GetLandProperty", ReplyAction="http://tempuri.org/ILandPropertyService/GetLandPropertyResponse")]
        System.Threading.Tasks.Task<LandProperties.LandPropertyService.LandProperty> GetLandPropertyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandPropertyService/SaveLandProperty", ReplyAction="http://tempuri.org/ILandPropertyService/SaveLandPropertyResponse")]
        void SaveLandProperty(LandProperties.LandPropertyService.LandProperty landPropertyToSave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandPropertyService/SaveLandProperty", ReplyAction="http://tempuri.org/ILandPropertyService/SaveLandPropertyResponse")]
        System.Threading.Tasks.Task SaveLandPropertyAsync(LandProperties.LandPropertyService.LandProperty landPropertyToSave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandPropertyService/Delete", ReplyAction="http://tempuri.org/ILandPropertyService/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILandPropertyService/Delete", ReplyAction="http://tempuri.org/ILandPropertyService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILandPropertyServiceChannel : LandProperties.LandPropertyService.ILandPropertyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LandPropertyServiceClient : System.ServiceModel.ClientBase<LandProperties.LandPropertyService.ILandPropertyService>, LandProperties.LandPropertyService.ILandPropertyService {
        
        public LandPropertyServiceClient() {
        }
        
        public LandPropertyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LandPropertyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LandPropertyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LandPropertyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<LandProperties.LandPropertyService.LandProperty> GetAllLandProperties() {
            return base.Channel.GetAllLandProperties();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<LandProperties.LandPropertyService.LandProperty>> GetAllLandPropertiesAsync() {
            return base.Channel.GetAllLandPropertiesAsync();
        }
        
        public LandProperties.LandPropertyService.LandProperty GetLandProperty(int id) {
            return base.Channel.GetLandProperty(id);
        }
        
        public System.Threading.Tasks.Task<LandProperties.LandPropertyService.LandProperty> GetLandPropertyAsync(int id) {
            return base.Channel.GetLandPropertyAsync(id);
        }
        
        public void SaveLandProperty(LandProperties.LandPropertyService.LandProperty landPropertyToSave) {
            base.Channel.SaveLandProperty(landPropertyToSave);
        }
        
        public System.Threading.Tasks.Task SaveLandPropertyAsync(LandProperties.LandPropertyService.LandProperty landPropertyToSave) {
            return base.Channel.SaveLandPropertyAsync(landPropertyToSave);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
